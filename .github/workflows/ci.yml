on: [push]

name: akr

jobs:
  quickcheck:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.rustversion.outputs.rustversion }}
    steps:
    - uses: actions/checkout@v2
    - run: cargo check
    - run: cargo pkgid -p akr
    - run: 'echo "$(cargo pkgid -p akr | cut -d: -f3)"'
    - id: rustversion
      run: 'echo "::set-output name=rustversion::$(cargo pkgid -p akr | cut -d: -f3)"'
  build:
    needs: quickcheck
    name: 'build-${{matrix.os}}'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04]
    steps:
    - uses: actions/checkout@v2
    - name: Build
      run: cargo build
    - name: Run tests
      run: cargo test
  fedorarpmbuild:
    needs: [build]
    runs-on: ubuntu-18.04
    name: FedoraRpm
    steps:
    - uses: actions/checkout@v2
    - name: BuildRpm
      id: buildrpm
      run: rustup toolchain install 1.52.0 && cargo +1.52.0 install cargo-generate-rpm --version 0.4.0 --locked &&
        cargo +1.52.0 build --release &&
        strip -s target/release/akr &&
        cargo +1.52.0 generate-rpm -p crates/kr
    - name: Upload fedora RPM Artifact  
      uses: actions/upload-artifact@v2
      with:
        name: fedorarpm
        path: ./target/generate-rpm/*
  debbuild:
    needs: [build]
    runs-on: ubuntu-18.04
    name: Amd64Deb
    steps:
    - uses: actions/checkout@v2
    - name: BuildDeb
      id: debbuild 
      run: cargo install cargo-deb && 
        ln -s /root/.cargo $HOME/.cargo && 
        ln -s /root/.rustup $HOME/.rustup && 
        cd $GITHUB_WORKSPACE &&
        sh -c "$*" &&
        cargo deb -p akr
    - name: Upload Deb Artifact
      uses: actions/upload-artifact@v2
      with:
        name: amd64deb
        path: ./target/debian/*
  update_release_draft:
    needs: [quickcheck,  debbuild, fedorarpmbuild]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: 1.0
          release_name: Release 1.0
          body: 'Change Me'
          draft: true
          prerelease: false
      - uses: actions/download-artifact@v2
      - run: ls -lha
      - name: Upload amd64 deb Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./amd64deb/akr_${{needs.quickcheck.outputs.version}}_amd64.deb
          asset_name: 'akr_${{needs.quickcheck.outputs.version}}_amd64.deb'
          asset_content_type: application/vnd.debian.binary-package
      - name: Upload amd64 rpm fedora Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./fedorarpm/akr-${{needs.quickcheck.outputs.version}}-1.x86_64.rpm
          asset_name: 'akr_${{needs.quickcheck.outputs.version}}-1_amd64_fedora.rpm'
          asset_content_type: application/octet-stream